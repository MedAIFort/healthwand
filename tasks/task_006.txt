# Task ID: 6
# Title: Create GitHub Actions integration
# Status: pending
# Dependencies: 4
# Priority: medium
# Description: Develop a GitHub Action that integrates HealthWand into CI/CD pipelines
# Details:
Create a GitHub Action definition file (action.yml). Implement Docker-based execution environment with all dependencies. Design input parameters for configuring the action. Create output formats compatible with GitHub Actions. Implement PR comment functionality for reporting findings. Add support for ignoring specific files or directories. Create documentation and examples for common workflows. Include options for failing builds on PHI detection.

# Test Strategy:
Test the action in a sample repository with mock PHI data. Verify correct reporting in PR comments and build logs. Test different configuration options and failure modes.

# Subtasks:
## 1. Create GitHub Action definition and Docker environment [pending]
### Dependencies: None
### Description: Define the GitHub Action structure and set up the Docker execution environment with all required dependencies
### Details:
Create the action.yml file that defines the action name, description, inputs, outputs, and Docker-based execution. Set up a Dockerfile that installs all necessary dependencies for HealthWand. Ensure the Docker image is optimized for CI/CD environments (minimal size, fast startup). Configure the entrypoint script to handle the GitHub Actions workflow context.

## 2. Implement configurable input parameters and file filtering [pending]
### Dependencies: 6.1
### Description: Design and implement the input parameters for the GitHub Action, including file filtering capabilities
### Details:
Define input parameters in action.yml such as scan_paths, exclude_patterns, severity_threshold, and fail_on_detection. Implement the logic to process these parameters in the action's execution flow. Add support for ignoring specific files or directories using glob patterns. Create validation for input parameters to provide helpful error messages for misconfiguration.

## 3. Develop output formatting and PR comment functionality [pending]
### Dependencies: 6.2
### Description: Create standardized output formats and implement the ability to post findings as PR comments
### Details:
Format scan results in a GitHub Actions compatible way (using ::set-output). Implement PR comment functionality using the GitHub API (via actions/github-script or directly). Design a clear, readable format for the PR comments that highlights findings effectively. Include severity levels and file locations in the output. Implement the logic to determine when a build should fail based on the fail_on_detection parameter and detected PHI.

## 4. Create documentation and example workflows [pending]
### Dependencies: 6.3
### Description: Develop comprehensive documentation and example workflows for common use cases
### Details:
Create a detailed README.md with usage instructions, parameter descriptions, and examples. Develop example workflow files (.github/workflows/examples/) for common scenarios: scanning PRs, scheduled scans, and manual triggers. Document best practices for integrating HealthWand into different types of repositories. Include troubleshooting guidance and advanced configuration options. Create visual examples of PR comments and other outputs to help users understand what to expect.

